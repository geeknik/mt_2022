1. Script to convert AST to PDA accepting that AST
- 1.1. Custom walker - preorder
- 1.2. Alphabet - all possible nodes as states (class constructor)
- 1.3. process node = create state in PDA

- equality of nodes - what properties matter

- 2. Unit tests
- 2.1. alphabet equality - test that each class equals to other class
- 2.2. "e2e test" - scripts in + out combinations


- 3. acceptance
- 3.1. source to AST to nodes list
- 3.2. iter

TODO:
- 1) vytvorit patterns.json - rucne s nejakou debug chybou
- 2) "run" script 
    2.1) nacist "patterns.json" do memory jako seznam objektu [{
        ast: <Node>[],
        title: string,
        description: string,
        referenceUrl: string,
        ...
    }]
    2.2) zavolat nad vstupem .contains(parse(vstup), patterns)
    vratit seznam nalezenych chyb - {title, description, referenceUrl }
    test
- 5) Patchovani - vratit nejen metadata o chybe, ale i opraveny skript


3) integrace do extensiony - zkusit, ze to najde testovaci chyby
5.1) integrace opravy do extensiony

4) rozsireni patterns.json - nejak z gitu

6) Minifikace/ekvivalence konstrukc√≠ ve stromu (var a = 1; var b = 2; == var a,b=1,2;) atd
7) Optimalizace matching algoritmu
8) Testovani
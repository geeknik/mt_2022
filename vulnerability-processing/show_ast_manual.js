// helper script to show AST in format needed by finder.js

const finder = require("../js-to-ast/src/finder");


// TODO:
// https://github.com/advisories/GHSA-446m-mv8f-q348
// Before: /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i
// Patch: /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i



const inputAst1 = finder.tryParse(`\/[0-9]*[\'a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}\/i`);
const patchAst = finder.tryParse(`\/[0-9]{0,256}[\'a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}\/i`);

// const title = "Title";
// const description = "Description";
// const severity = 2;
// const referenceUrl = "Advisory url";

// console.log(JSON.stringify(inputAst1,  (k, v) => (k === 'start' || k === 'end' || k === 'sourceType') ? undefined : v));
// console.log(JSON.stringify(inputAst2,  (k, v) => (k === 'start' || k === 'end' || k === 'sourceType') ? undefined : v));
// console.log(JSON.stringify(inputAst3,  (k, v) => (k === 'start' || k === 'end' || k === 'sourceType') ? undefined : v));

let patchAstHash = finder.hash.MD5(patchAst);
// let inputAstHash = finder.hash.MD5(JSON.stringify(inputAst,  (k, v) => (k === 'start' || k === 'end' || k === 'sourceType') ? undefined : v));

console.log(finder.hash.MD5(JSON.stringify({"type":"Literal","value":{},"raw":"/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i","regex":{"pattern":"[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}","flags":"i"}})));
console.log(patchAstHash);
// console.log(finder.hash.MD5(JSON.stringify({ "type": "Literal", "value": {}, "raw": "/^(?:[^#<]*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/", "regex": { "pattern": "^(?:[^#<]*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$", "flags": "" } })));

// console.log(JSON.stringify({
//     "title": title,
//     "description": description,
//     "reference_url": referenceUrl,
//     "severity": parseInt(severity),
//     "ast": inputAstHash,
//     // "patch": patchAstHash,
// }));

console.log(JSON.stringify({
    "id": patchAstHash,
    "patch": patchAst,
}, (k, v) => (k === 'start' || k === 'end' || k === 'sourceType') ? undefined : v));
// Purpose - analyse data received in web crawl
// Input - list of websites + their index in order of # visitors
const s = require("./sites_list");
const data = require("./crawl_output");
const sites = s.sites;

let allData = data.from0to5000
    .concat(data.from100to105)
    .concat(data.from200to205)
    .concat(data.from300to305)
    .concat(data.from400to405)
    .concat(data.from500to505)
    .concat(data.from600to605)
    .concat(data.from700to705)
    .concat(data.from800to805)
    .concat(data.from900to905);

// remove vulnerabilities of sites not in list
// remove sites without vulnerabilities
let structuredSites = [];

for (let i = 0; i < allData.length; i++) {
    const vulnerability = allData[i];
    let url = new URL(vulnerability.url);
    let hostname = url.hostname.replace(/^www\./, '');

    if (sites.includes(hostname) == false) {
        continue;
    }


    let existingRecord = structuredSites.filter((s) => { return s.url == hostname });
    if (existingRecord.length > 0) {
        if (existingRecord[0].vulnerabilities.filter((v) => { return v.title == vulnerability.title }).length == 0) {
            existingRecord[0].vulnerabilities.push(vulnerability);
        };
    } else {
        structuredSites.push({
            url: hostname,
            originalIndex: sites.indexOf(hostname),
            vulnerabilities: [vulnerability],
        });
    }
}

console.log(structuredSites);

// Graph 1 - Site Index vs # findings
console.log(structuredSites.map((v) => { return v.originalIndex; }));
console.log(structuredSites.map((v) => { return v.vulnerabilities.length; }));

// Graph 2 - Site Index vs Unique vulnerabilities (file vs regex jquery)
console.log(structuredSites.map((v) => { return v.originalIndex; }));
console.log(structuredSites.map((v) => {
    // if has regex and other - dont count regex

    let jqueryRegexVulns = v.vulnerabilities.filter((v) => { return v.title == 'Cross-Site Scripting in jquery < 1.9.0' || v.title == 'Potential XSS vulnerability in jQuery < 3.5.0'; });
    let jqueryForCycleVulns = v.vulnerabilities.filter((v) => { return v.title == 'XSS in jQuery <3.4.0 as used in Drupal, Backdrop CMS, and other products'; });
    let jqueryFileVulns = v.vulnerabilities.filter((v) => { return v.title.includes('Vulnerable jQuery version'); });

    if (jqueryFileVulns == null) {
        return v.vulnerabilities.length;
    }

    return v.vulnerabilities.length - jqueryRegexVulns.length - jqueryForCycleVulns.length;
}));


// List of sites where file-jqueries hit but regex did not
console.log(structuredSites.filter((v) => {
    let jqueryRegexVulns = v.vulnerabilities.filter((v) => { return v.title == 'Cross-Site Scripting in jquery < 1.9.0' || v.title == 'Potential XSS vulnerability in jQuery < 3.5.0'; });
    let jqueryForCycleVulns = v.vulnerabilities.filter((v) => { return v.title == 'XSS in jQuery <3.4.0 as used in Drupal, Backdrop CMS, and other products'; });
    let jqueryFileVulns = v.vulnerabilities.filter((v) => { return v.title.includes('Vulnerable jQuery version'); });

    return jqueryFileVulns != null && jqueryRegexVulns == null && jqueryForCycleVulns == null;
}).length);

// List of sites where regex jqueries hit but files did not
console.log(structuredSites.filter((v) => {
    let jqueryRegexVulns = v.vulnerabilities.filter((v) => { return v.title == 'Cross-Site Scripting in jquery < 1.9.0' || v.title == 'Potential XSS vulnerability in jQuery < 3.5.0'; });
    let jqueryForCycleVulns = v.vulnerabilities.filter((v) => { return v.title == 'XSS in jQuery <3.4.0 as used in Drupal, Backdrop CMS, and other products'; });
    let jqueryFileVulns = v.vulnerabilities.filter((v) => { return v.title.includes('Vulnerable jQuery version'); });

    return jqueryFileVulns == null && (jqueryRegexVulns != null || jqueryForCycleVulns != null);
}).length);

// Graph 3 - Site Index vs NPM vulnerabilities
// console.log(structuredSites.filter((v) => {
//     let npmVulns = v.vulnerabilities.filter((v) => {
//         return v.reference_url == 'https://github.com/advisories/GHSA-9q5w-79cv-947m' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-7xfp-9c55-5vqj' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-cf4h-3jhx-xvhq' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-4w2v-q235-vp99' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-cph5-m8f7-6c5x' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-vh95-rmgr-6w4m' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-4rq4-32rv-6wp6' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-2pr6-76vf-7546' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-8j8c-7jfh-h6hx' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-f2jv-r9rf-7988' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-62gr-4qp9-h98f' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-3cqr-58rm-57f8' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-f2jv-r9rf-7988' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-w457-6q6x-cgp9' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-q42p-pg8m-cqh6' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-fxwf-4rqh-v8g3' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-qv2v-m59f-v5fw' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-6fc8-4gx4-v693' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-5v72-xg48-5rpm' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-6x77-rpqf-j6mw' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-8687-vv9j-hgph' ||
//             v.reference_url == 'https://github.com/advisories/GHSA-35q2-47q7-3pc3';
//     });

//     return npmVulns && npmVulns.length > 0;

// }));

// // Graph 4 - Sites sorted by amount of unique jquery vulnerabilities
// console.log(structuredSites.map((v) => {
//     function jqueryCount(a) {
//         let jqueryRegexVulns = a.vulnerabilities.filter((v) => { return v.title == 'Cross-Site Scripting in jquery < 1.9.0' || v.title == 'Potential XSS vulnerability in jQuery < 3.5.0'; });
//         let jqueryForCycleVulns = a.vulnerabilities.filter((v) => { return v.title == 'XSS in jQuery <3.4.0 as used in Drupal, Backdrop CMS, and other products'; });
//         let jqueryFileVulns = a.vulnerabilities.filter((v) => { return v.title.includes('Vulnerable jQuery version'); });

//         if (jqueryFileVulns && jqueryFileVulns.length > 0) {
//             return jqueryFileVulns.length;
//         }

//         return jqueryRegexVulns.length + jqueryForCycleVulns.length;
//     }

//     return {
//         count: jqueryCount(v),
//         data: v,
//     }
// }).sort((a, b) => {
//     return b.count - a.count;
// }));

